# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type ApiTokens {
  _id: String!
  launchRoomToken: String!
}

type Clause {
  attribute: String!
  negate: Boolean!
  op: String!
  values: [String!]!
}

input ClauseInput {
  attribute: String!
  negate: Boolean!
  op: String!
  values: [String!]!
}

type ClientSideAvailability {
  usingEnvironmentId: Boolean!
  usingMobileKey: Boolean!
}

type Empty {
  ok: Boolean!
}

type Fallthrough {
  rollout: VariationsObject
  variation: Int
}

input FallthroughInput {
  rollout: Variations
  variation: Int
}

type FlagDetails {
  archived: Boolean!
  clientSide: Boolean!
  clientSideAvailability: ClientSideAvailability!
  deleted: Boolean!
  description: String!
  fallthrough: Fallthrough!
  key: String!
  name: String!
  offVariation: Int!
  on: Boolean!
  prerequisites: Prerequisite!
  rules: [Rule!]
  salt: String!
  sel: String!
  targets: [Target!]!
  trackEvents: Boolean!
  trackEventsFallthrough: Boolean!
  variations: [JSON!]!
  version: Int!
}

type FlagsStatus {
  archived: Boolean!
  flags: [FlagDetails!]!
  limit: Int!
  skip: Int!
  total: Int!
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  subscribeToNewsletter(email: String!, firstName: String, lastName: String): Empty!
  upsertApiTokens(_id: String!, launchRoomToken: String!): ApiTokens
  upsertFlag(archived: Boolean, description: String, fallthrough: FallthroughInput, key: ID!, name: String, offVariation: Int, on: Boolean, rules: [RuleInput!], variationsBoolean: [Boolean!], variationsJson: [String!], variationsNumber: [Int!], variationsString: [String!], workspaceId: ID!): Boolean!
}

type Prerequisite {
  key: String!
  variation: Int!
}

type Query {
  apiTokens: ApiTokens!
  flagDetails(key: ID!, workspaceId: ID!): FlagDetails
  flagsStatus(archived: Boolean!, limit: Int!, skip: Int!, workspaceId: ID!): FlagsStatus!

  # is the server healthy?
  health: String!
}

type Rule {
  clauses: [Clause!]!
  id: ID
  rollout: VariationsObject
  trackEvents: Boolean!
  variation: Int
}

input RuleInput {
  clauses: [ClauseInput!]!
  id: ID
  rollout: Variations
  trackEvents: Boolean!
  variation: Int
}

type Target {
  values: [String!]!
  variation: Int!
}

input Variations {
  variations: [Int!]!
}

type VariationsObject {
  variations: [Int!]!
}
